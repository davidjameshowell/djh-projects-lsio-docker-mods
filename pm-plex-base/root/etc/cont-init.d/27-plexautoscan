#!/usr/bin/with-contenv bash

# If the first run completed successfully, we are done
if [ -e /.legacyPlexAutoScanConfigure ]; then
  exit 0
fi

if [ ${ENABLE_LEGACY_PAS} == "true" ]; then
  PLEX_AUTOSCAN_BRANCH=${PAS_BRANCH:-master}
  PLEX_AUTOSCAN_COMMIT=${PAS_COMMIT:-4e31fb19d81ca9d7ff0fc2f362f9accfff979bc4}

  echo "[PAS] Installing Plex Auto Scan from branch: ${PLEX_AUTOSCAN_BRANCH} via commit: ${PLEX_AUTOSCAN_COMMIT}"
  apt update && \
  apt-get install -y \
      git \
      python3 \
      python3-pip \
      && \
  git clone --depth 1 --single-branch --branch ${PLEX_AUTOSCAN_BRANCH} https://github.com/l3uddz/plex_autoscan.git /plex_autoscan && \
  cd /plex_autoscan && git checkout ${PLEX_AUTOSCAN_COMMIT} && \
  pip3 install --no-cache-dir --upgrade -r /plex_autoscan/requirements.txt && \
  # Remove dependencies
  apt-get purge -y --auto-remove \
  
  echo "**** cleanup PAS Python ****" && \
  apt-get clean && \
  rm -rf \
    /tmp/* \
    /var/lib/apt/lists/* \
    /var/tmp/*

  if [ $GIT_UPDATE_AUTOSCAN == 'true']
      echo "[PAS] plex_autoscan checking for updates via Git"
      git -C /plex_autoscan pull
  fi

  # Create and chown plex_autoscan config dir
  echo "[PAS] Chown and make autoscan dir"
  mkdir -p /autoscan
  chown -R abc:abc /autoscan /plex_autoscan

  ENV \
    # Plex_autoscan config file
  export PLEX_AUTOSCAN_CONFIG=/autoscan/config.json
  # Plex_autoscan queue db
  export PLEX_AUTOSCAN_QUEUEFILE=/autoscan/queue.db
  # Plex_autoscan log file
  export PLEX_AUTOSCAN_LOGFILE=/autoscan/plex_autoscan.log
  # Plex_autoscan cache db
  export PLEX_AUTOSCAN_CACHEFILE=/autoscan/cache.db
else
  echo "Not configuring Legacy PAS, skipping..."
fi

touch ./legacyPlexAutoScanConfigure