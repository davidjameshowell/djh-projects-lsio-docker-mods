#!/usr/bin/with-contenv bash

# Variable check - required for operation!
[[ -z "$MEDIA_RCLONE_MOUNT" ]] && { echo "Parameter MEDIA_RCLONE_MOUNT is required" ; exit 1; }
[[ -z "$RCLONE_CHAMBER_SERVICE" ]] && { echo "Parameter RCLONE_CHAMBER_SERVICE is required" ; exit 1; }
[[ -z "$RCLONE_CHAMBER_KEY" ]] && { echo "Parameter RCLONE_CHAMBER_KEY is required" ; exit 1; }
[[ -z "$MINIO_SECRET_KEY" ]] && { echo "Parameter MINIO_SECRET_KEY is required" ; exit 1; }
[[ -z "$SERVICE_NAME" ]] && { echo "Parameter SERVICE_NAME is required" ; exit 1; }
[[ -z "$RCLONE_CONFIG_NAME" ]] && { echo "Parameter RCLONE_CONFIG_NAME is required" ; exit 1; }

echo "[BASE] Installing fuse and vim."
apt-get update && \
apt-get install -y \
 fuse vim && \
echo "**** cleanup ****" && \
apt-get clean && \
rm -rf \
	/tmp/* \
	/var/lib/apt/lists/* \
	/var/tmp/*

echo "[BASE] Creaing RClone folder, cleaning out if anything appears, and making required directories."
mkdir -p /${MEDIA_RCLONE_MOUNT}
#Clean out ${MEDIA_RCLONE_MOUNT} folder
rm -rf /${MEDIA_RCLONE_MOUNT}/*

mkdir -p /rclone
mkdir -p /rclone-logs
mkdir -p /tmp/mc

chown -R abc:abc /usr/local/bin

chamber read -q $RCLONE_CHAMBER_SERVICE $RCLONE_CHAMBER_KEY > /rclone/rclone.conf
chamber read -q $RCLONE_CHAMBER_SERVICE $MINIO_SECRET_KEY > /tmp/mc/config.json

mc --config-dir=/tmp/mc cp minio/service-account-keys/service_account_keys.tar.gz /tmp
tar -xvf /tmp/service_account_keys.tar.gz -C /

echo "[BASE] Begin Chown effect"
# permissions
chown -R abc:abc \
	/config \
	/rclone \
	/rclone-logs \
	/service_account_keys \
	/${MEDIA_RCLONE_MOUNT} \
	/dev/fuse

echo "[BASE] Begin chown for non-plex services"

if [ ${SERVICE_NAME} != "plex" ] 
then
    chown -R abc:abc \
	/opt
fi